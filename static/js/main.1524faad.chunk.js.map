{"version":3,"sources":["components/Card/index.tsx","api/index.ts","utils/apiConstants.ts","Pages/Main/index.tsx","index.tsx"],"names":["Card","title","author","url","className","icon","api","axios","create","baseURL","process","request","method","params","Main","useState","q","sq","books","sb","onChange","e","target","value","onClick","query","then","axiosResponse","data","hits","map","hit","error","isCancel","console","log","book","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SA4BeA,EAhBe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAC9C,OACE,sBAAKC,UAAU,OAAf,UACE,gCACE,cAAC,IAAD,CAAMC,KAAK,6BADb,IAC4CH,KAE5C,gCACE,cAAC,IAAD,CAAMG,KAAK,gBADb,IAC+BJ,KAE/B,gCACE,cAAC,IAAD,CAAMI,KAAK,WADb,IAC0BF,SCnB1BG,EAAMC,IAAMC,OAAO,CACvBC,QCJeC,mCDeFC,EARC,SACdC,EACAT,EACAU,GAEA,OAAOP,EAAIK,QAAW,CAAEC,SAAQT,MAAKU,YE4DxBC,EA3De,WAC5B,IACA,EAAgBC,mBAAiB,IAAjC,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAoBF,mBAAiB,IAArC,mBAAOG,EAAP,KAAcC,EAAd,KAiCA,OACE,sBAAKf,UAAU,YAAf,UACE,6BArCUM,cAsCV,sBAAKN,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,SAASgB,SAAU,SAACC,GAAD,OAAOJ,EAAGI,EAAEC,OAAOC,UACvD,wBAAQC,QArChB,WACE,IAEMX,EAAS,CACbY,MAAOT,GAGT,IACEV,EAAc,MAPJ,SAOgBO,GAAQa,MAAK,SAACC,GACtC,IAEMT,EAFWS,EAAcC,KAAKC,KAEbC,KAAI,SAACC,GAM1B,MALmB,CACjB9B,MAAO8B,EAAI9B,MACXC,OAAQ6B,EAAI7B,OACZC,IAAK4B,EAAI5B,QAKbgB,EAAGD,MAEL,MAAOc,GACP,IAAIzB,IAAM0B,SAASD,GAGjB,MAAMA,EAFNE,QAAQC,IAAI,sCAaV,uBAEF,qBAAK/B,UAAU,UAAf,SACGc,EAAMY,KAAI,SAACM,GAAD,OACT,cAAC,EAAD,CAEElC,OAAQkC,EAAKlC,OACbD,MAAOmC,EAAKnC,MACZE,IAAKiC,EAAKjC,KAHLiC,EAAKnC,mBCrDxBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1524faad.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Icon } from \"@iconify/react\";\n\nimport \"./index.scss\";\n\ninterface Props {\n  title: string;\n  author: string;\n  url: string;\n}\n\nconst Card: React.FC<Props> = ({ title, author, url }) => {\n  return (\n    <div className=\"card\">\n      <div>\n        <Icon icon=\"ant-design:user-outlined\" /> {author}\n      </div>\n      <div>\n        <Icon icon=\"bx:bxs-book\" /> {title}\n      </div>\n      <div>\n        <Icon icon=\"il:url\" /> {url}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import axios, { Method, AxiosResponse } from \"axios\";\nimport { endpoint } from \"../utils/apiConstants\";\n\nconst api = axios.create({\n  baseURL: endpoint,\n});\n\nconst request = <T>(\n  method: Method,\n  url: string, // eslint-disable-next-line\n  params?: any // params are optional and the type vary within the request\n): Promise<AxiosResponse<T>> => {\n  return api.request<T>({ method, url, params });\n};\n\nexport default request;\n","const endpoint = process.env.REACT_APP_HOST_BACKEND;\n\nexport { endpoint };\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport \"./index.scss\";\n\nimport Card from \"../../components/Card\";\n\nimport api from \"../../api\";\n\nimport { response, book } from \"../../api/interfaces\";\n\ntype Props = {};\n\nconst Main: React.FC<Props> = () => {\n  const title = process.env.REACT_APP_TITLE || \"Title not found in env file\";\n  const [q, sq] = useState<string>(\"\");\n  const [books, sb] = useState<book[]>([]);\n\n  function fetch() {\n    const URI = \"search\";\n\n    const params = {\n      query: q,\n    };\n\n    try {\n      api<response>(\"GET\", URI, params).then((axiosResponse) => {\n        const response = axiosResponse.data.hits; // Extracting data from axios response\n\n        const books = response.map((hit) => {\n          const book: book = {\n            title: hit.title,\n            author: hit.author,\n            url: hit.url,\n          };\n          return book;\n        });\n\n        sb(books);\n      });\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        console.log(\"Marvel API request got cancelled\");\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>{title}</h1>\n      <div className=\"content\">\n        <div className=\"searchContainer\">\n          <input className=\"search\" onChange={(e) => sq(e.target.value)} />\n          <button onClick={fetch}>Search</button>\n        </div>\n        <div className=\"results\">\n          {books.map((book) => (\n            <Card\n              key={book.title}\n              author={book.author}\n              title={book.title}\n              url={book.url}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\n\nimport Main from \"./Pages/Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}